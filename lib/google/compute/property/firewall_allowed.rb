# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by puppet-codegen and manual
#     changes will be clobbered when the file is regenerated.
#
# ----------------------------------------------------------------------------

require 'google/compute/property/array'
require 'puppet/property'

module Google
  module Compute
    module Data
      # A class to manage data for allowed for firewall.
      class FirewallAllowed
        include Comparable

        attr_reader :ip_protocol
        attr_reader :ports

        def initialize(args)
          @ip_protocol = Google::Compute::Property::String.parse(
            args['ip_protocol'] || args['IPProtocol']
          )
          @ports = Google::Compute::Property::StringArray.parse(args['ports'])
        end

        def to_json(_arg = nil)
          {
            'IPProtocol' => ip_protocol,
            'ports' => ports
          }.to_json
        end

        def to_s
          {
            ip_protocol: ip_protocol,
            ports: ports
          }.map { |k, v| "#{k}: #{v}" }.join(', ')
        end

        def ==(other)
          return false if other == :absent
          return false if other.class != self.class
          return false if ip_protocol != other.ip_protocol
          return false if ports != other.ports
          true
        end

        def <=>(other)
          result = ip_protocol.<=>(other.ip_protocol)
          return result unless result.zero?
          result = ports.<=>(other.ports)
          return result unless result.zero?
          0
        end
      end
    end

    module Property
      # A class to manage input to allowed for firewall.
      class FirewallAllowed < Puppet::Property
        def unsafe_munge(value)
          self.class.parse(value)
        end

        def self.parse(value)
          return if value.nil?
          Data::FirewallAllowed.new(value)
        end
      end

      # A Puppet property that holds an integer
      class FirewallAllowedArray < Google::Compute::Property::Array
        def unsafe_munge(value)
          self.class.parse(value)
        end

        def self.parse(value)
          return if value.nil?
          return FirewallAllowed.parse(value) unless value.is_a?(::Array)
          value.map { |v| FirewallAllowed.parse(v) }
        end
      end
    end
  end
end
