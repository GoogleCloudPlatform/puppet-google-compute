# Copyright 2018 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

require 'google/compute/property/enum'
require 'google/compute/property/integer'
require 'google/compute/property/string'
require 'google/compute/property/string_array'
require 'google/compute/property/time'
require 'google/object_store'
require 'puppet'

Puppet::Type.newtype(:gcompute_region) do
  @doc = <<-DOC
    Represents a Region resource. A region is a specific geographical location
    where you can run your resources. Each region has one or more zones
  DOC

  autorequire(:gauth_credential) do
    credential = self[:credential]
    raise "#{ref}: required property 'credential' is missing" if credential.nil?
    [credential]
  end

  newparam :credential do
    desc <<-DESC
      A gauth_credential name to be used to authenticate with Google Cloud
      Platform.
    DESC
  end

  newparam(:project) do
    desc 'A Google Cloud Platform project to manage.'
  end

  newparam(:name, namevar: true) do
    # TODO(nelsona): Make this description to match the key of the object.
    desc 'The name of the Region.'
  end

  newproperty(:creation_timestamp, parent: Google::Compute::Property::Time) do
    desc 'Creation timestamp in RFC3339 text format. (output only)'
  end

  newproperty(:deprecated_deleted, parent: Google::Compute::Property::Time) do
    desc <<-DOC
      An optional RFC3339 timestamp on or after which the deprecation state of
      this resource will be changed to DELETED. (output only)
    DOC
  end

  newproperty(:deprecated_deprecated,
              parent: Google::Compute::Property::Time) do
    desc <<-DOC
      An optional RFC3339 timestamp on or after which the deprecation state of
      this resource will be changed to DEPRECATED. (output only)
    DOC
  end

  newproperty(:deprecated_obsolete, parent: Google::Compute::Property::Time) do
    desc <<-DOC
      An optional RFC3339 timestamp on or after which the deprecation state of
      this resource will be changed to OBSOLETE. (output only)
    DOC
  end

  newproperty(:deprecated_replacement,
              parent: Google::Compute::Property::String) do
    desc <<-DOC
      The URL of the suggested replacement for a deprecated resource. The
      suggested replacement resource must be the same kind of resource as the
      deprecated resource. (output only)
    DOC
  end

  newproperty(:deprecated_state, parent: Google::Compute::Property::Enum) do
    desc <<-DOC
      The deprecation state of this resource. This can be DEPRECATED, OBSOLETE,
      or DELETED. Operations which create a new resource using a DEPRECATED
      resource will return successfully, but with a warning indicating the
      deprecated resource and recommending its replacement. Operations which
      use OBSOLETE or DELETED resources will be rejected and result in an
      error. (output only)
    DOC
    newvalue(:DEPRECATED)
    newvalue(:OBSOLETE)
    newvalue(:DELETED)
  end

  newproperty(:description, parent: Google::Compute::Property::String) do
    desc 'An optional description of this resource. (output only)'
  end

  newproperty(:id, parent: Google::Compute::Property::Integer) do
    desc 'The unique identifier for the resource. (output only)'
  end

  newproperty(:name, parent: Google::Compute::Property::String) do
    desc 'Name of the resource.'
  end

  newproperty(:zones, parent: Google::Compute::Property::StringArray) do
    desc 'List of zones within the region (output only)'
  end

  # Returns all properties that a provider can export to other resources
  def exports
    provider.exports
  end
end
